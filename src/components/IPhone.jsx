/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: polyman (https://sketchfab.com/Polyman_3D)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/apple-iphone-15-pro-max-black-df17520841214c1792fb8a44c6783ee7
Title: Apple iPhone 15 Pro Max Black
*/

import * as THREE from 'three';
import React, { useEffect, useRef } from 'react';
import { useGLTF, useTexture } from '@react-three/drei';

function Model(props) {
  const { nodes, materials } = useGLTF('/models/scene.glb');
  const texture = useTexture(props.item.img);

  useEffect(() => {
    // Update material colors based on the provided item color
    Object.entries(materials).map((material) => {
      // Exclude specific material names from color change
      if (
        material[0] !== 'zFdeDaGNRwzccye' &&
        material[0] !== 'ujsvqBWRMnqdwPx' &&
        material[0] !== 'hUlRcbieVuIiOXG' &&
        material[0] !== 'jlzuBkUzuJqgiAK' &&
        material[0] !== 'xNrofRCqOXXHVZt'
      ) {
        material[1].color = new THREE.Color(props.item.color[0]);
      }
      material[1].needsUpdate = true;
    });
  }, [materials, props.item]);

  return (
    <group {...props} dispose={null}>
      {/* Render multiple mesh components with their respective geometries and materials */}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.ttmRoLdJipiIOmf.geometry}
        material={materials.hUlRcbieVuIiOXG}
        scale={0.01}
      />
      {/* ... */}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.xXDHkMplTIDAXLN.geometry}
        material={materials.pIJKfZsazmcpEiU}
        scale={0.01}
      >
        {/* Apply a custom texture to a specific mesh */}
        <meshStandardMaterial roughness={1} map={texture} />
      </mesh>
      {/* ... */}
    </group>
  );
}

export default Model;

// Preload the glTF model
useGLTF.preload('/models/scene.glb');